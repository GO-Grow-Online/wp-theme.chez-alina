<div class="cookie-banner card card-body ctn" id="cookie-banner" data-page="welcome">

    <div data-page="welcome" aria-hidden="false">
        {% set content = g.cookies_banner.welcome %}
        <p class="ctn-title h3">
            {% if content.title.st %}<span>{{ content.title.st }}</span>{% endif %}
            {{ content.title.t }}
        </p>

        <div class="ctn-wysiwyg wysiwyg">{{ content.ctn }}</div>

        <div class="cookie-banner-options btn-group">
            <button class="btn btn-full js--close js--acceptAllCookies" data-close="cookie-banner">{{ pll("Tout accepter") }}</button>
            <button class="btn btn-full js--editCookies">{{ pll("Personnaliser") }}</button>
            <button class="btn btn-full js--close js--refuseCookies" data-close="cookie-banner">{{ pll("Refuser") }}</button>
        </div>
    </div>

    <div data-page="edit" aria-hidden="true">

        {% set content = g.cookies_banner.selection %}

        <p class="ctn-title h3">
            {% if content.title.st %}<span>{{ content.title.st }}</span>{% endif %}
            {{ content.title.t }}
        </p>

        <ul>
            {% for type in cookies_types %}
            <li class="cookie-banner-option">
                <p>
                    <input {% if type.slug == "necessary" %}checked{% endif %} type="checkbox" aria-labelledby="cookie-consent-label-{{ type.slug }}" id="cookie-consent-{{ type.slug }}"/>
                    <label for="cookie-consent-{{ type.slug }}" id="cookie-consent-label-{{ type.slug }}">{{ pll(type.title) }}</label> <br>
                    <small>{{ pll(type.infos) }}</small>
                </p>
            </li>
            {% endfor %}
        </ul>
        
        <div class="cookie-banner-options btn-group">
            <button class="btn btn-full js--toWelcomeCookies">{{ pll("Retour") }}</button>
            <button class="btn btn-full js--acceptSelectedCookies js--close" data-close="cookie-banner">{{ pll("Accepter les cookies sélectionnés") }}</button>
        </div>
    </div>

    
    <script>   

        var cookie_banner = document.getElementById('cookie-banner');

        // All cookies settings are editable trough function.php

        // If no consent has been registered, open cookies popup
        setTimeout(() => {
            if(localStorage.getItem('consentMode') === null) { document.querySelector('body').classList.add('cookie-banner--open'); }
        }, 2000);

        // Allow all cookies
        document.querySelector('.js--acceptAllCookies').addEventListener('click', function() { 
            setConsent({ 
                {% for type in cookies_types %}
                {{ type.slug }}: true, 
                {% endfor %}
            }); 
        });

        // Allow selected cookies
        document.querySelector('.js--acceptSelectedCookies').addEventListener('click', function() { 
            cookie_goto_tab('welcome');
            setConsent({ 
                {% for type in cookies_types %}
                {{ type.slug }}: document.getElementById('cookie-consent-{{ type.slug }}').checked, 
                {% endfor %}
            }); 
        });

        // Block all cookies
        document.querySelector('.js--refuseCookies').addEventListener('click', function() { 
            setConsent({ 
                {% for type in cookies_types %}
                {{ type.slug }}: false, 
                {% endfor %}
            }); 
        });

                
        // Cookie banner interactions
        function cookie_goto_tab(tab) {
            cookie_banner.setAttribute("data-page", tab); 
            document.querySelectorAll('.cookie-banner > div').forEach(el => { el.setAttribute("aria-hidden", "true"); });
            document.querySelector('.cookie-banner > div[data-page='+ tab +']').setAttribute("aria-hidden", "false");
        }

        document.querySelector('.js--editCookies').addEventListener('click', function() {  cookie_goto_tab('edit'); });
        document.querySelector('.js--toWelcomeCookies').addEventListener('click', function() {  cookie_goto_tab('welcome'); });

    
        // Function to set consent regarding selected options
        {% for setting in cookies_cfg|filter(setting => setting.active == true) %}
        function {{ setting.function }}() { gtag('consent', 'update', { '{{ setting.slug }}': 'granted' }); }
        {% endfor %}
    
        function setConsent(consent) {
            const consentMode = {
                {% for setting in cookies_cfg|filter(setting => setting.active == true) %}
                '{{ setting.slug }}': consent.{{ setting.type }} ? 'granted' : 'denied',
                {% endfor %}
            };
    
            if (consentMode.functionality_storage == "granted") {                
                gtag('consent', 'update', consentMode);  
                localStorage.setItem('consentMode', JSON.stringify(consentMode));
            } 
            
            init_custom_events();
        }


        function init_custom_events() {
            gtag('consent', 'get', function(consent) {
                if (consent.analytics_storage === 'granted') {

                    console.log("Analytics_storage granted");

                    // Petit utilitaire pour simplifier l'ajout d'écouteurs de clic
                    const attachClickEvent = (selector, eventCategory, eventLabel, value) => {
                        document.querySelectorAll(selector).forEach((element) => {
                        element.addEventListener('click', () => {
                            gtag('event', 'click', {
                            event_category: eventCategory,
                            event_label: eventLabel,
                            value: value
                            });
                        });
                        });
                    };

                    // Step 1/3 - Click on "order"
                    attachClickEvent('.js--order', 'Order progression', '1/3 Order click', 1);

                    // Step 2/3 - Click on "set order method"
                    document.querySelectorAll('.js--setMethod').forEach((btn) => {
                        btn.addEventListener('click', () => {
                        gtag('event', 'click', {
                            event_category: 'Order progression',
                            event_label: '2/3 Order method choice',
                            value: btn.getAttribute('data-href')
                        });
                        });
                    });

                    // Step 3/3 - Click on "end order"
                    attachClickEvent('.js--endOrder', 'Order progression', '3/3 End order', 1);

                    // Click on phone link
                    attachClickEvent('a[href^="tel:"]', 'Contact', 'Phone', 1);

                    // Click on email link
                    attachClickEvent('a[href^="mailto:"]', 'Contact', 'Phone', 1);
                } else {
                    console.log("Analytics_storage denied");
                }
            }
        }

        init_custom_events();

    </script>
</div>
